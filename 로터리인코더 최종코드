#define CLK 2    // 2번핀을 CLK에 연결
#define DT 3     // 3번핀을 DT에 연결

int count = 0;   // 카운팅 저장용 변수
int currentCLK;     // 현재 CLK의 상태 저장용 변수
int lastCLK;         // 이전 CLK의 상태 저장용 변수
String currentDir ="";     // 현재 방향 출력용 문자열 변수

void setup() {
  
  // 엔코더핀을 입력으로 설정
  pinMode(CLK,INPUT);
  pinMode(DT,INPUT);


  // 시리얼 출력 개시
  Serial.begin(9600);

  // CLK핀의 최초 상태 저장
  lastCLK = digitalRead(CLK);
  
  //아두이노 인터럽트 설정
  attachInterrupt(0, updateEncoder, CHANGE);
  attachInterrupt(1, updateEncoder, CHANGE);
}

void loop() {
  
}

void updateEncoder(){   // 인터럽트 발생시 실행되는 함수
  // CLK의 현재 상태를 읽어서 
  currentCLK = digitalRead(CLK);

  // CLK핀의 신호가 바뀌었고(즉, 로터리엔코더의 회전이 발생했고), 그 상태가 HIGH이면(최소 회전단위의 회전이 발생했다면) 
  if ((currentCLK != lastCLK)  && currentCLK == 0){
    // DT핀의 신호를 확인해서 엔코더의 회전 방향을 확인함.
    if (digitalRead(DT) != currentCLK) {    // 신호가 다르다면 시계방향 회전     
      count ++;                                // 카운팅 용 숫자 1 증가
      currentDir ="시계방향 회전";
    } 
    else {                                   // 신호가 같다면 반시계방향 회전
      count --;                              // 카운팅 용 숫자 1 감소
      currentDir ="반시계 방향 회전";
    }

    Serial.print("회전방향: ");
    Serial.print(currentDir);               // 회전방향 출력
    Serial.print(" | Counter: ");
    Serial.println(count);                    // 카운팅 출력
  }

  // 마지막 상태 변수 저장
  lastCLK = currentCLK;
  delay(1); //인코더 측정 오류 방지용 딜레이
}
